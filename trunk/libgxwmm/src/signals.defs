;; From GxControlParameter

(define-property var-id
  (of-object "GxControlParameter")
  (prop-type "GParamString")
  (docs "The id of the linked variable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

;; From GxSwitch

(define-property var-id
  (of-object "GxSwitch")
  (prop-type "GParamString")
  (docs "The id of the linked variable")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-action-appearance
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Legt fest, ob die zugewiesene Eigenschaft der Aktionserscheinung verwendet werden soll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property related-action
  (of-object "GxSwitch")
  (prop-type "GParamObject")
  (docs "Die Aktion, die dieses aktivierbare Objekt aktiviert und davon Aktualisierungen erhält")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property user-data
  (of-object "GxSwitch")
  (prop-type "GParamPointer")
  (docs "Zeiger auf anonyme Benutzerdaten")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property name
  (of-object "GxSwitch")
  (prop-type "GParamString")
  (docs "Der Name des Widgets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property parent
  (of-object "GxSwitch")
  (prop-type "GParamObject")
  (docs "Das Eltern-Widget dieses Widgets. Muss ein Container-Widget sein")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property width-request
  (of-object "GxSwitch")
  (prop-type "GParamInt")
  (docs "Direkte Angabe für die Breitenanforderung des Widgets; -1, falls die natürliche Anforderung verwendet werden soll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property height-request
  (of-object "GxSwitch")
  (prop-type "GParamInt")
  (docs "Direkte Angabe für die Höhenanforderung des Widgets; -1, falls die natürliche Anforderung verwendet werden soll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property visible
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Soll das Widget sichtbar sein?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property sensitive
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Soll das Widget auf Eingaben reagieren?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property app-paintable
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Kann die Anwendung direkt auf das Widget zeichnen?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-focus
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Soll das Widget den Eingabefokus akzeptieren können?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-focus
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Soll das Widget den Eingabefokus haben?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property is-focus
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Ist das Widget das fokussierte Widget innerhalb der obersten Ebene?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property can-default
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Soll das Widget das Vorgabe-Widget sein können?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-default
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Soll das Widget das Vorgabe-Widget sein?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property receives-default
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Falls WAHR, erhält das Widget die Vorgabe-Aktion, wenn es fokussiert ist")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property composite-child
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Ist das Widget Teil eines zusammengesetzten Widgets?")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property style
  (of-object "GxSwitch")
  (prop-type "GParamObject")
  (docs "Der Stil des Widgets, der Informationen zu seinem Aussehen enthält (Farben etc.)")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property events
  (of-object "GxSwitch")
  (prop-type "GParamFlags")
  (docs "Die Ereignismaske, die entscheidet, welche GdkEvents dieses Widget erhält")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property extension-events
  (of-object "GxSwitch")
  (prop-type "GParamEnum")
  (docs "Die Maske, die festlegt, welche Erweiterungsereignisse dieses Widget erhält")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property no-show-all
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Soll »gtk_widget_show_all()« dieses Widget nicht betreffen?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property has-tooltip
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Legt fest, ob das Widget eine Minihilfe hat")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-markup
  (of-object "GxSwitch")
  (prop-type "GParamString")
  (docs "Der Inhalt der Minihilfe dieses Widgets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property tooltip-text
  (of-object "GxSwitch")
  (prop-type "GParamString")
  (docs "Der Inhalt der Minihilfe dieses Widgets")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property window
  (of-object "GxSwitch")
  (prop-type "GParamObject")
  (docs "Das Fenster des Widgets, sofern es erkannt wurde")
  (readable #t)
  (writable #f)
  (construct-only #f)
)

(define-property double-buffered
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Legt fest, ob das Widget doppelt gepuffert wird")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property border-width
  (of-object "GxSwitch")
  (prop-type "GParamUInt")
  (docs "Die Breite des leeren Rands um die Kinder des Containers")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property resize-mode
  (of-object "GxSwitch")
  (prop-type "GParamEnum")
  (docs "Die Art und Weise, auf die mit Größenänderungsereignissen umgegangen werden soll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property child
  (of-object "GxSwitch")
  (prop-type "GParamObject")
  (docs "Kann verwendet werden, um ein neues Kind zum Container hinzuzufügen")
  (readable #f)
  (writable #t)
  (construct-only #f)
)

(define-property image
  (of-object "GxSwitch")
  (prop-type "GParamObject")
  (docs "Das Kind-Widget, das neben dem Button-Text erscheint")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property relief
  (of-object "GxSwitch")
  (prop-type "GParamEnum")
  (docs "Der Reliefstil des Rands")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-underline
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Falls eingeschaltet, bedeutet ein Unterstrich im Text, dass das nächste Zeichen als Tastaturkürzel verwendet werden soll")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property use-stock
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Falls aktiv, wird die Beschriftung nicht angezeigt, sondern verwendet, um ein Symbol aus dem Repertoire zu wählen")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property focus-on-click
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Soll der Knopf den Fokus erhalten, sobald er mit der Maus angeklickt wurde?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property xalign
  (of-object "GxSwitch")
  (prop-type "GParamFloat")
  (docs "Die vertikale Position des Kindes in der verfügbaren Fläche. Bei 0.0 wird es links-, bei 1.0 rechtsbündig ausgerichtet")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property yalign
  (of-object "GxSwitch")
  (prop-type "GParamFloat")
  (docs "Die vertikale Position des Kindes in der verfügbaren Fläche. Bei 0.0 wird es am oberen, bei 1.0 am unteren Rand ausgerichtet")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property image-position
  (of-object "GxSwitch")
  (prop-type "GParamEnum")
  (docs "Position des Bildes bezüglich des Textes")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property active
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Soll der Umschaltknopf eingedrückt sein oder nicht?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property inconsistent
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Ist der Umschaltknopf in einem »Zwischen«-Zustand?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property draw-indicator
  (of-object "GxSwitch")
  (prop-type "GParamBoolean")
  (docs "Soll der Umschaltteil des Knopfes dargestellt werden?")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property label
  (of-object "GxSwitch")
  (prop-type "GParamObject")
  (docs "GtkLabel for caption")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

(define-property base-name
  (of-object "GxSwitch")
  (prop-type "GParamString")
  (docs "Base name of the image, append '_on' and '_off' for the stock names")
  (readable #t)
  (writable #t)
  (construct-only #f)
)

