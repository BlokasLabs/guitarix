#! /usr/bin/env python
# encoding: utf-8

def configure(conf):
    pass

def build(bld):
    sources = [
        'gx_globals.cpp',
        'gx_child_process.cpp',
        'gx_engine.cpp',
        'gx_engine_midi.cpp',
        'gx_convolver.cpp',
        'gx_pitch_tracker.cpp',
        'gx_resampler.cpp',
        'gx_engine_audio.cpp',
        'gx_main_interface.cpp',
        'gx_portmap.cpp',
        'gx_paramtable.cpp',
        'gx_interface_builder.cpp',
        'gx_cairo_callbacks.cpp',
        'gx_gui_helpers.cpp',
        'gx_threads.cpp',
        'gx_jack.cpp',
        'gx_jconv_settings.cpp',
        'gx_preset.cpp',
        'gx_sndfile.cpp',
        'gx_system.cpp',
        'gx_ui.cpp',
        'GtkFastMeter.cpp',
        'GtkRegler.cpp',
        'GtkWaveView.cpp',
        'gx_main.cpp',
        ]

    builder_files = [
        'midi.glade',
        'ports.glade',
        ]
    prog = bld.new_task_gen('cxx', 'program')
    prog.includes = ['.','..','headers'] # need ".." for config.h
    prog.cxxflags= bld.env['CXXFLAGS']
    if not bld.env['ZITA_RESAMPLER']:
        sources.append('zita-resampler/zita-resampler.cc')
        prog.includes.append('zita-resampler')
    else:
        prog.lib = 'zita-resampler';
    if not bld.env['INTERN_ZITA_CONVOLVER']:
        sources.append('zita-convolver/zita-convolver.cc')
        prog.includes.append('zita-convolver'); 
    prog.source = [] + sources
    prog.uselib = ['JACK', 'SNDFILE', 'GTHREAD', 'GTK2', 'GTKMM', 'ZITA_CONVOLVER', 'FFTW3']
    prog.target = bld.env['BIN_NAME']
    prog.chmod=0755
    prog.install_path = bld.env['BINDIR']

    bld.install_files(bld.env['GX_BUILDER_DIR'], builder_files, chmod=0644)
